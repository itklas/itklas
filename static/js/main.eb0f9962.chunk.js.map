{"version":3,"sources":["Countdown.js","img/IT-KLAS horizon.png","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Countdown","useState","day","setDay","hour","setHour","minute","setMinute","second","setSecond","interval","useRef","useEffect","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","className","Navbar","src","Logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAoEeA,MAjEf,WAEI,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,mBAAS,MAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEIC,EAAWC,mBAiCf,OAPAC,qBAAU,WAEN,OA1Be,WACf,IAAMC,EAAgB,IAAIC,KAAK,0BAA0BC,UAEzDL,EAAWM,aAAY,WACnB,IAAMC,GAAM,IAAIH,MAAOC,UACjBG,EAAWL,EAAgBI,EAE3BE,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAT,MACnBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAEnDA,EAAW,EACVO,cAAcf,EAASgB,UAEvBvB,EAAOgB,GACPd,EAAQiB,GACRf,EAAUgB,GACVd,EAAUe,MAGf,KAIHG,GACO,WACHF,cAAcf,EAASgB,aAK3B,sBAAKE,UAAU,YAAf,UACI,yDACA,iDACA,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,6BAAK1B,IACL,yCAEJ,sBAAK0B,UAAU,aAAf,UACI,6BAAKxB,IACL,0CAEJ,sBAAKwB,UAAU,eAAf,UACI,6BAAKtB,IACL,2CAEJ,sBAAKsB,UAAU,eAAf,UACI,6BAAKpB,IACL,mDC9DL,G,MAAA,IAA0B,6CCI1B,SAASqB,IACpB,OACI,sBAAKD,UAAU,oBAAf,UACI,qBAAKE,IAAKC,EAAMC,IAAI,SACpB,qBAAIJ,UAAU,kBAAd,UACI,oBAAIA,UAAU,YAAd,qBACA,oBAAIA,UAAU,YAAd,wBACA,oBAAIA,UAAU,YAAd,sBACA,oBAAIA,UAAU,YAAd,4BCCDK,MATf,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb0f9962.chunk.js","sourcesContent":["import React, {useRef, useState, useEffect }from 'react'\nimport './Countdown.css'\n\nfunction Countdown() {\n\n    const [day, setDay] = useState('00')\n    const [hour, setHour] = useState('00')\n    const [minute, setMinute] = useState('00')\n    const [second, setSecond] = useState('00')\n    \n    let interval = useRef();\n    \n    const startTimer = () =>{\n        const countdownDate = new Date('July 10, 2021 09:00:00').getTime()\n        \n        interval = setInterval(()=>{\n            const now = new Date().getTime();\n            const distance = countdownDate - now;  \n            \n            const days = Math.floor(distance / (1000 * 60 * 60 * 24))\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000)\n\n            if(distance < 0){\n                clearInterval(interval.current);\n            }else{\n                setDay(days);\n                setHour(hours);\n                setMinute(minutes);\n                setSecond(seconds)\n            }\n            \n        }, 1000)\n    }\n\n    useEffect(() => {\n        startTimer();\n        return () => {\n            clearInterval(interval.current)\n        }\n    })\n\n    return (\n        <div className='container'>\n            <h1>la formation html / css</h1>\n            <h3>debutera dans :</h3>\n            <div className='container__date'>\n                <div className='date days'>\n                    <h2>{day}</h2>\n                    <p>Jours</p>\n                </div>\n                <div className='date hours'>\n                    <h2>{hour}</h2>\n                    <p>Heures</p>\n                </div>\n                <div className='date minutes'>\n                    <h2>{minute}</h2>\n                    <p>Minutes</p>\n                </div>\n                <div className='date seconds'>\n                    <h2>{second}</h2>\n                    <p>Secondes</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Countdown\n","export default __webpack_public_path__ + \"static/media/IT-KLAS horizon.e9f6ba52.png\";","import React from 'react';\nimport './Navbar.css';\nimport Logo from './img/IT-KLAS horizon.png';\n\nexport default function Navbar() {\n    return (\n        <div className='navbar__container'>\n            <img src={Logo} alt='logo'/>\n            <ul className='link__container'>\n                <li className='nav__link'>Accueil</li>\n                <li className='nav__link'>Formations</li>\n                <li className='nav__link'>Services</li>\n                <li className='nav__link'>A Propos</li>\n            </ul>\n        </div>\n    )\n}\n","import Countdown from \"./Countdown\";\nimport Navbar from \"./Navbar\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Countdown/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}